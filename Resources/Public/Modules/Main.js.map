{
  "version": 3,
  "sources": ["../../Private/Assets/Main.js"],
  "sourcesContent": ["import PhotoSwipeLightbox from \"photoswipe/lightbox\";\nimport { dispatchEvent, getDataOptions, setPswpContainerAttributes, addEventListener } from \"./Helper\";\n\nconst optionsFromNeos = { ...getDataOptions(\"photoswipeI18n\"), ...getDataOptions(\"photoswipeOptions\") };\n\nfunction init(options = {}) {\n    options = { ...optionsFromNeos, ...options };\n    const lightbox = new PhotoSwipeLightbox({\n        gallery: document.body,\n        pswpModule: () => import(\"photoswipe\"),\n        ...options,\n    });\n    lightbox.on(\"firstUpdate\", setPswpContainerAttributes);\n    lightbox.on(\"contentLoadImage\", ({ content, isLazy }) => {\n        dispatchEvent({ type: \"image\", action: \"open\", content, isLazy });\n    });\n    lightbox.on(\"destroy\", () => {\n        dispatchEvent({ type: \"image\", action: \"close\" });\n    });\n    lightbox.init();\n    return lightbox;\n}\n\nconst lightbox = init();\n\naddEventListener(\"images\", () => {\n    lightbox.init();\n});\n\nwindow.neosPhotoSwipe = window.neosPhotoSwipe || {};\nwindow.neosPhotoSwipe.images = {\n    init,\n    lightbox,\n};\n\nexport default init;\n"],
  "mappings": "qGAGA,IAAMA,EAAkB,CAAE,GAAGC,EAAe,gBAAgB,EAAG,GAAGA,EAAe,mBAAmB,CAAE,EAEtG,SAASC,EAAKC,EAAU,CAAC,EAAG,CACxBA,EAAU,CAAE,GAAGH,EAAiB,GAAGG,CAAQ,EAC3C,IAAMC,EAAW,IAAIC,EAAmB,CACpC,QAAS,SAAS,KAClB,WAAY,IAAM,OAAO,8BAAY,EACrC,GAAGF,CACP,CAAC,EACD,OAAAC,EAAS,GAAG,cAAeE,CAA0B,EACrDF,EAAS,GAAG,mBAAoB,CAAC,CAAE,QAAAG,EAAS,OAAAC,CAAO,IAAM,CACrDC,EAAc,CAAE,KAAM,QAAS,OAAQ,OAAQ,QAAAF,EAAS,OAAAC,CAAO,CAAC,CACpE,CAAC,EACDJ,EAAS,GAAG,UAAW,IAAM,CACzBK,EAAc,CAAE,KAAM,QAAS,OAAQ,OAAQ,CAAC,CACpD,CAAC,EACDL,EAAS,KAAK,EACPA,CACX,CAEA,IAAMA,EAAWF,EAAK,EAEtBQ,EAAiB,SAAU,IAAM,CAC7BN,EAAS,KAAK,CAClB,CAAC,EAED,OAAO,eAAiB,OAAO,gBAAkB,CAAC,EAClD,OAAO,eAAe,OAAS,CAC3B,KAAAF,EACA,SAAAE,CACJ,EAEA,IAAOO,EAAQT",
  "names": ["optionsFromNeos", "getDataOptions", "init", "options", "lightbox", "PhotoSwipeLightbox", "setPswpContainerAttributes", "content", "isLazy", "dispatchEvent", "addEventListener", "Main_default"]
}
