{
  "version": 3,
  "sources": ["../../Private/Assets/Fetch.js"],
  "sourcesContent": ["import PhotoSwipeLightbox from \"photoswipe/lightbox\";\n\nconst optionsFromNeos = JSON.parse(\n    document.querySelector(\"[data-photoswipe-fetch-options]\")?.dataset?.photoswipeFetchOptions || \"{}\",\n);\n\nconst wrappingClass = optionsFromNeos.wrappingClass || \"jonnitto-photoswipe-content\";\nconst fetchLinkAppend = optionsFromNeos.fetchLinkAppend || \"\";\ndelete optionsFromNeos.contentSelector;\ndelete optionsFromNeos.fetchLinkAppend;\n\nlet preloaderTimeout = null;\nlet pswpContainer = null;\nlet currentContent = null;\n\nfunction init(options = {}) {\n    options = { ...optionsFromNeos, ...options };\n    const lightbox = new PhotoSwipeLightbox({\n        preloadFirstSlide: false,\n        allowPanToNext: false,\n        initialZoomLevel: 1,\n        secondaryZoomLevel: 1,\n        maxZoomLevel: 1,\n        wheelToZoom: false,\n        closeOnVerticalDrag: false,\n        mainClass: \"pswp--fetch\",\n        arrowKeys: false,\n\n        pswpModule: () => import(\"photoswipe\"),\n        ...options,\n    });\n\n    lightbox.addFilter(\"isContentZoomable\", () => false);\n    lightbox.addFilter(\"preventPointerEvent\", () => true);\n    lightbox.on(\"change\", showPreloader);\n\n    lightbox.on(\"firstUpdate\", (event) => {\n        const container = getPswpContainer();\n        container.setAttribute(\"data-turbo-temporary\", true);\n        // This enables default scrolling\n        container?.addEventListener(\n            \"wheel\",\n            (event) => {\n                event.stopImmediatePropagation();\n                event.stopPropagation();\n            },\n            { passive: true },\n        );\n\n        // Register click handler between slides\n        container?.addEventListener(\"click\", pswpContentEventListener);\n    });\n\n    lightbox.on(\"contentLoad\", async (event) => {\n        const { content } = event;\n        let src = content?.data?.src;\n        if (content.type != \"fetch\" || !src) {\n            return;\n        }\n        event.preventDefault();\n        content.element = await fetchElement(src);\n        currentContent = content.element;\n    });\n    lightbox.init();\n    return lightbox;\n}\n\nwindow.neosPhotoSwipe = window.neosPhotoSwipe || {};\nwindow.neosPhotoSwipe.fetch = {\n    init,\n    lightbox: init(),\n};\n\nasync function pswpContentEventListener(event) {\n    const target = event.target;\n    if (!target.matches('[data-pswp-type=\"fetch\"]')) {\n        return;\n    }\n    event.preventDefault();\n    showPreloader();\n    toggleLoadingClass(true);\n\n    const newElement = await fetchElement(target);\n    currentContent.replaceWith(newElement);\n    currentContent = newElement;\n}\n\nasync function fetchElement(url) {\n    const markup = await fetch(url + fetchLinkAppend).then((response) => response.text());\n    const template = document.createElement(\"template\");\n    template.innerHTML = markup;\n    const element = document.createElement(\"div\");\n    element.classList.add(wrappingClass);\n    element.append(...template.content.children);\n    hidePreloader();\n    return element;\n}\n\nfunction showPreloader() {\n    preloaderTimeout = setTimeout(() => {\n        togglePreloader(true);\n    }, 1000);\n}\n\nfunction hidePreloader() {\n    preloaderTimeout && clearTimeout(preloaderTimeout);\n    toggleLoadingClass(false);\n    togglePreloader(false);\n}\n\nfunction getPswpContainer() {\n    if (pswpContainer) {\n        return pswpContainer;\n    }\n    pswpContainer = document.querySelector(\".pswp\");\n    return pswpContainer;\n}\n\nfunction toggleLoadingClass(show = true) {\n    getPswpContainer()?.classList.toggle(\"pswp--fetch-loading\", show);\n}\n\nfunction togglePreloader(show = true) {\n    getPswpContainer()?.classList.toggle(\"pswp--show-preloader\", show);\n}\n"],
  "mappings": "wCAEA,IAAMA,EAAkB,KAAK,MACzB,SAAS,cAAc,iCAAiC,GAAG,SAAS,wBAA0B,IAClG,EAEMC,EAAgBD,EAAgB,eAAiB,8BACjDE,EAAkBF,EAAgB,iBAAmB,GAC3D,OAAOA,EAAgB,gBACvB,OAAOA,EAAgB,gBAEvB,IAAIG,EAAmB,KACnBC,EAAgB,KAChBC,EAAiB,KAErB,SAASC,EAAKC,EAAU,CAAC,EAAG,CACxBA,EAAU,CAAE,GAAGP,EAAiB,GAAGO,CAAQ,EAC3C,IAAMC,EAAW,IAAIC,EAAmB,CACpC,kBAAmB,GACnB,eAAgB,GAChB,iBAAkB,EAClB,mBAAoB,EACpB,aAAc,EACd,YAAa,GACb,oBAAqB,GACrB,UAAW,cACX,UAAW,GAEX,WAAY,IAAM,OAAO,8BAAY,EACrC,GAAGF,CACP,CAAC,EAED,OAAAC,EAAS,UAAU,oBAAqB,IAAM,EAAK,EACnDA,EAAS,UAAU,sBAAuB,IAAM,EAAI,EACpDA,EAAS,GAAG,SAAUE,CAAa,EAEnCF,EAAS,GAAG,cAAgBG,GAAU,CAClC,IAAMC,EAAYC,EAAiB,EACnCD,EAAU,aAAa,uBAAwB,EAAI,EAEnDA,GAAW,iBACP,QACCD,GAAU,CACPA,EAAM,yBAAyB,EAC/BA,EAAM,gBAAgB,CAC1B,EACA,CAAE,QAAS,EAAK,CACpB,EAGAC,GAAW,iBAAiB,QAASE,CAAwB,CACjE,CAAC,EAEDN,EAAS,GAAG,cAAe,MAAOG,GAAU,CACxC,GAAM,CAAE,QAAAI,CAAQ,EAAIJ,EAChBK,EAAMD,GAAS,MAAM,IACrBA,EAAQ,MAAQ,SAAW,CAACC,IAGhCL,EAAM,eAAe,EACrBI,EAAQ,QAAU,MAAME,EAAaD,CAAG,EACxCX,EAAiBU,EAAQ,QAC7B,CAAC,EACDP,EAAS,KAAK,EACPA,CACX,CAEA,OAAO,eAAiB,OAAO,gBAAkB,CAAC,EAClD,OAAO,eAAe,MAAQ,CAC1B,KAAAF,EACA,SAAUA,EAAK,CACnB,EAEA,eAAeQ,EAAyBH,EAAO,CAC3C,IAAMO,EAASP,EAAM,OACrB,GAAI,CAACO,EAAO,QAAQ,0BAA0B,EAC1C,OAEJP,EAAM,eAAe,EACrBD,EAAc,EACdS,EAAmB,EAAI,EAEvB,IAAMC,EAAa,MAAMH,EAAaC,CAAM,EAC5Cb,EAAe,YAAYe,CAAU,EACrCf,EAAiBe,CACrB,CAEA,eAAeH,EAAaI,EAAK,CAC7B,IAAMC,EAAS,MAAM,MAAMD,EAAMnB,CAAe,EAAE,KAAMqB,GAAaA,EAAS,KAAK,CAAC,EAC9EC,EAAW,SAAS,cAAc,UAAU,EAClDA,EAAS,UAAYF,EACrB,IAAMG,EAAU,SAAS,cAAc,KAAK,EAC5C,OAAAA,EAAQ,UAAU,IAAIxB,CAAa,EACnCwB,EAAQ,OAAO,GAAGD,EAAS,QAAQ,QAAQ,EAC3CE,EAAc,EACPD,CACX,CAEA,SAASf,GAAgB,CACrBP,EAAmB,WAAW,IAAM,CAChCwB,EAAgB,EAAI,CACxB,EAAG,GAAI,CACX,CAEA,SAASD,GAAgB,CACrBvB,GAAoB,aAAaA,CAAgB,EACjDgB,EAAmB,EAAK,EACxBQ,EAAgB,EAAK,CACzB,CAEA,SAASd,GAAmB,CACxB,OAAIT,IAGJA,EAAgB,SAAS,cAAc,OAAO,EACvCA,EACX,CAEA,SAASe,EAAmBS,EAAO,GAAM,CACrCf,EAAiB,GAAG,UAAU,OAAO,sBAAuBe,CAAI,CACpE,CAEA,SAASD,EAAgBC,EAAO,GAAM,CAClCf,EAAiB,GAAG,UAAU,OAAO,uBAAwBe,CAAI,CACrE",
  "names": ["optionsFromNeos", "wrappingClass", "fetchLinkAppend", "preloaderTimeout", "pswpContainer", "currentContent", "init", "options", "lightbox", "PhotoSwipeLightbox", "showPreloader", "event", "container", "getPswpContainer", "pswpContentEventListener", "content", "src", "fetchElement", "target", "toggleLoadingClass", "newElement", "url", "markup", "response", "template", "element", "hidePreloader", "togglePreloader", "show"]
}
