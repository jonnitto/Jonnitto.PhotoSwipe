{
  "version": 3,
  "sources": ["../../Private/Assets/Fetch.js"],
  "sourcesContent": ["import PhotoSwipeLightbox from \"photoswipe/lightbox\";\nimport {\n    getPswpContainer,\n    dispatchEvent,\n    createElement,\n    getDataOptions,\n    setPswpContainerAttributes,\n    addEventListener,\n} from \"./Helper\";\n\nconst optionsFromNeos = { ...getDataOptions(\"photoswipeI18n\"), ...getDataOptions(\"photoswipeFetchOptions\") };\n\nconst wrappingClass = optionsFromNeos.wrappingClass || \"jonnitto-photoswipe-content\";\nconst fetchLinkAppend = optionsFromNeos.fetchLinkAppend || \"\";\ndelete optionsFromNeos.wrappingClass;\ndelete optionsFromNeos.fetchLinkAppend;\n\nlet currentContent = null;\n\nfunction init(options = {}) {\n    options = { ...optionsFromNeos, ...options };\n    const lightbox = new PhotoSwipeLightbox({\n        preloadFirstSlide: false,\n        allowPanToNext: false,\n        initialZoomLevel: 1,\n        secondaryZoomLevel: 1,\n        maxZoomLevel: 1,\n        wheelToZoom: false,\n        closeOnVerticalDrag: false,\n        mainClass: \"pswp--fetch\",\n        arrowKeys: false,\n        preloaderDelay: 1000,\n\n        pswpModule: () => import(\"photoswipe\"),\n        ...options,\n    });\n\n    lightbox.addFilter(\"isContentZoomable\", () => false);\n    lightbox.addFilter(\"preventPointerEvent\", () => true);\n\n    lightbox.on(\"firstUpdate\", (event) => {\n        setPswpContainerAttributes();\n\n        const container = getPswpContainer();\n        // This enables default scrolling\n        container?.addEventListener(\n            \"wheel\",\n            (event) => {\n                event.stopImmediatePropagation();\n                event.stopPropagation();\n            },\n            { passive: true },\n        );\n\n        // Register click handler between slides\n        container?.addEventListener(\"click\", pswpContentEventListener);\n    });\n\n    lightbox.on(\"destroy\", () => {\n        dispatchEvent({ type: \"fetch\", action: \"close\" });\n    });\n\n    lightbox.on(\"contentLoad\", async (event) => {\n        const { content } = event;\n        let src = content?.data?.src;\n        if (content.type != \"fetch\" || !src) {\n            return;\n        }\n        content.state = \"loading\";\n        event.preventDefault();\n        const element = await fetchElement(src);\n        content.element = element;\n        currentContent = content.element;\n        content.onLoaded();\n    });\n    lightbox.init();\n    return lightbox;\n}\n\nasync function pswpContentEventListener(event) {\n    const target = event.target;\n    if (!target.matches('[data-pswp-type=\"fetch\"]')) {\n        return;\n    }\n    event.preventDefault();\n    const newElement = await fetchElement(target.href);\n    currentContent.replaceWith(newElement);\n    currentContent = newElement;\n}\n\nasync function fetchUrl(url, fetchLinkAppend) {\n    const response = await fetch(url + fetchLinkAppend);\n    if (!response.ok) {\n        throw new Error(optionsFromNeos.errorMsg);\n    }\n    const markup = await response.text();\n    url = completeUrl(url);\n    dispatchEvent({ url, lightbox: url + fetchLinkAppend, type: \"fetch\", action: \"open\" });\n    return markup;\n}\n\nfunction completeUrl(url) {\n    const reg = new RegExp(\"^(http|https)://\", \"i\");\n    if (reg.test(url)) {\n        return url;\n    }\n    return window.location.origin + (url.startsWith(\"/\") ? \"\" : \"/\") + url;\n}\n\nasync function fetchElement(url) {\n    toggleLoadingClass(true);\n    const markup = await fetchUrl(url, fetchLinkAppend).catch((error) => {\n        const message = error.message.replace('\"%s\"', url);\n        return `<p class=\"jonnitto-photoswipe-content__error\">${message}</p>`;\n    });\n\n    const element = createElement(markup, wrappingClass);\n    toggleLoadingClass(false);\n    return element;\n}\n\nfunction toggleLoadingClass(show = true) {\n    getPswpContainer()?.classList.toggle(\"pswp--fetch-loading\", show);\n}\n\nconst lightbox = init();\n\naddEventListener(\"fetch\", () => {\n    lightbox.init();\n});\n\nwindow.neosPhotoSwipe = window.neosPhotoSwipe || {};\nwindow.neosPhotoSwipe.fetch = {\n    init,\n    lightbox,\n};\n"],
  "mappings": "8GAUA,IAAMA,EAAkB,CAAE,GAAGC,EAAe,gBAAgB,EAAG,GAAGA,EAAe,wBAAwB,CAAE,EAErGC,EAAgBF,EAAgB,eAAiB,8BACjDG,EAAkBH,EAAgB,iBAAmB,GAC3D,OAAOA,EAAgB,cACvB,OAAOA,EAAgB,gBAEvB,IAAII,EAAiB,KAErB,SAASC,EAAKC,EAAU,CAAC,EAAG,CACxBA,EAAU,CAAE,GAAGN,EAAiB,GAAGM,CAAQ,EAC3C,IAAMC,EAAW,IAAIC,EAAmB,CACpC,kBAAmB,GACnB,eAAgB,GAChB,iBAAkB,EAClB,mBAAoB,EACpB,aAAc,EACd,YAAa,GACb,oBAAqB,GACrB,UAAW,cACX,UAAW,GACX,eAAgB,IAEhB,WAAY,IAAM,OAAO,8BAAY,EACrC,GAAGF,CACP,CAAC,EAED,OAAAC,EAAS,UAAU,oBAAqB,IAAM,EAAK,EACnDA,EAAS,UAAU,sBAAuB,IAAM,EAAI,EAEpDA,EAAS,GAAG,cAAgBE,GAAU,CAClCC,EAA2B,EAE3B,IAAMC,EAAYC,EAAiB,EAEnCD,GAAW,iBACP,QACCF,GAAU,CACPA,EAAM,yBAAyB,EAC/BA,EAAM,gBAAgB,CAC1B,EACA,CAAE,QAAS,EAAK,CACpB,EAGAE,GAAW,iBAAiB,QAASE,CAAwB,CACjE,CAAC,EAEDN,EAAS,GAAG,UAAW,IAAM,CACzBO,EAAc,CAAE,KAAM,QAAS,OAAQ,OAAQ,CAAC,CACpD,CAAC,EAEDP,EAAS,GAAG,cAAe,MAAOE,GAAU,CACxC,GAAM,CAAE,QAAAM,CAAQ,EAAIN,EAChBO,EAAMD,GAAS,MAAM,IACzB,GAAIA,EAAQ,MAAQ,SAAW,CAACC,EAC5B,OAEJD,EAAQ,MAAQ,UAChBN,EAAM,eAAe,EACrB,IAAMQ,EAAU,MAAMC,EAAaF,CAAG,EACtCD,EAAQ,QAAUE,EAClBb,EAAiBW,EAAQ,QACzBA,EAAQ,SAAS,CACrB,CAAC,EACDR,EAAS,KAAK,EACPA,CACX,CAEA,eAAeM,EAAyBJ,EAAO,CAC3C,IAAMU,EAASV,EAAM,OACrB,GAAI,CAACU,EAAO,QAAQ,0BAA0B,EAC1C,OAEJV,EAAM,eAAe,EACrB,IAAMW,EAAa,MAAMF,EAAaC,EAAO,IAAI,EACjDf,EAAe,YAAYgB,CAAU,EACrChB,EAAiBgB,CACrB,CAEA,eAAeC,EAASC,EAAKnB,EAAiB,CAC1C,IAAMoB,EAAW,MAAM,MAAMD,EAAMnB,CAAe,EAClD,GAAI,CAACoB,EAAS,GACV,MAAM,IAAI,MAAMvB,EAAgB,QAAQ,EAE5C,IAAMwB,EAAS,MAAMD,EAAS,KAAK,EACnC,OAAAD,EAAMG,EAAYH,CAAG,EACrBR,EAAc,CAAE,IAAAQ,EAAK,SAAUA,EAAMnB,EAAiB,KAAM,QAAS,OAAQ,MAAO,CAAC,EAC9EqB,CACX,CAEA,SAASC,EAAYH,EAAK,CAEtB,OADY,IAAI,OAAO,mBAAoB,GAAG,EACtC,KAAKA,CAAG,EACLA,EAEJ,OAAO,SAAS,QAAUA,EAAI,WAAW,GAAG,EAAI,GAAK,KAAOA,CACvE,CAEA,eAAeJ,EAAaI,EAAK,CAC7BI,EAAmB,EAAI,EACvB,IAAMF,EAAS,MAAMH,EAASC,EAAKnB,CAAe,EAAE,MAAOwB,GAEhD,iDADSA,EAAM,QAAQ,QAAQ,OAAQL,CAAG,CACc,MAClE,EAEKL,EAAUW,EAAcJ,EAAQtB,CAAa,EACnD,OAAAwB,EAAmB,EAAK,EACjBT,CACX,CAEA,SAASS,EAAmBG,EAAO,GAAM,CACrCjB,EAAiB,GAAG,UAAU,OAAO,sBAAuBiB,CAAI,CACpE,CAEA,IAAMtB,EAAWF,EAAK,EAEtByB,EAAiB,QAAS,IAAM,CAC5BvB,EAAS,KAAK,CAClB,CAAC,EAED,OAAO,eAAiB,OAAO,gBAAkB,CAAC,EAClD,OAAO,eAAe,MAAQ,CAC1B,KAAAF,EACA,SAAAE,CACJ",
  "names": ["optionsFromNeos", "getDataOptions", "wrappingClass", "fetchLinkAppend", "currentContent", "init", "options", "lightbox", "PhotoSwipeLightbox", "event", "setPswpContainerAttributes", "container", "getPswpContainer", "pswpContentEventListener", "dispatchEvent", "content", "src", "element", "fetchElement", "target", "newElement", "fetchUrl", "url", "response", "markup", "completeUrl", "toggleLoadingClass", "error", "createElement", "show", "addEventListener"]
}
